generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type ActivityActivities {
  icon String
  name String
}

type ActivityDescription {
  heading String
  text    String
}

model Activity {
  id          String                @id @default(auto()) @map("_id") @db.ObjectId
  activities  ActivityActivities[]
  description ActivityDescription[]
  imageUrl    String
  images      String[]
  link        String?
  name        String
  price       Int
  slug        String
  Booking     Booking[]
  Review      Review[]

  @@map("activity")
}

model Booking {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  activityId   String   @db.ObjectId
  userId       String   @db.ObjectId
  userName     String?
  activityName String?
  guests       Int
  adults       Int?
  children     Int?
  infants      Int?
  noOfDays     Int
  discount     Int?
  startDate    String
  endDate      String
  price        Int
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  activity     Activity @relation(fields: [activityId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  Review       Review[]

  @@map("bookings")
}

model User {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  userId  String    @unique
  fName   String?
  lName   String?
  email   String?
  image   String?
  about   String?
  isAdmin Boolean?
  Booking Booking[]
  Review  Review[]

  @@map("users")
}

model Review {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  activityId String   @db.ObjectId
  bookingId  String   @db.ObjectId
  userId     String   @db.ObjectId
  rating     Int
  review     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  activity   Activity @relation(fields: [activityId], references: [id], onDelete: Cascade)
  booking    Booking  @relation(fields: [bookingId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("reviews")
}
